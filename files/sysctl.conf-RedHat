# This file is being maintained by Puppet.
# DO NOT EDIT

# Kernel sysctl configuration file for Red Hat Linux
#
# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and
# sysctl.conf(5) for more details.

# Controls IP packet forwarding
net.ipv4.ip_forward = 0

# Controls source route verification
net.ipv4.conf.default.rp_filter = 1

# Do not accept source routing
net.ipv4.conf.default.accept_source_route = 0

# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 0

# Controls whether core dumps will append the PID to the core filename
# Useful for debugging multi-threaded applications
kernel.core_uses_pid = 1

# Controls the use of TCP syncookies
net.ipv4.tcp_syncookies = 1

# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536

# Controls the default maxmimum size of a mesage queue
kernel.msgmax = 65536

# Controls the maximum shared segment size, in bytes
kernel.shmmax = 68719476736

# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 4294967296

# Reboot the system 60 seconds after a panic
kernel.panic = 60

#Controls max number of message queue identifiers
kernel.msgmni = 1024
 
# Controls max. semaphoers per set, max semaphores system wide, max operations per semop call, max semaphore sets system-wide
 
# (Default 250 32000 32 128)
kernel.sem = 1000 32000 32 512  
 
#Maximal number of remembered connection requests, which are
#still did not receive an acknowledgment from connecting client.
#Default value is 1024 for systems with more than 128Mb of memory,
#and 128 for low memory machines. If server suffers of overload,
#try to increase this number. (default 1024)
net.core.netdev_max_backlog = 2500
 
#Limit of socket listen() backlog, known in userspace as SOMAXCONN.
#Defaults to 128.  See also tcp_max_syn_backlog for additional tuning
#for TCP sockets. (default 128)
net.core.somaxconn = 2500
 
# Controls how long we keep sockets in the state FIN-WAIT2 if we are the one closing the socket (Default 30)
net.ipv4.tcp_fin_timeout = 30 
 
# Controls how many times we try to restransmit the initial SYN packet (default 5)
net.ipv4.tcp_syn_retries = 20
 
# Controls how many time to retransmit SYN,ACK reply to a SYN request (default 5)
net.ipv4.tcp_synack_retries = 20
 
# Disable tcp selective ack's (default 1)
net.ipv4.tcp_sack = 0 
 
#Define different restriction levels for announcing the local
# source IP address from IP packets in ARP requests sent on
# interface:
 
# 0 - (default) Use any local address, configured on any interface
# 1 - Try to avoid local addresses that are not in the target's
# subnet for this interface. This mode is useful when target
# hosts reachable via this interface require the source IP
# address in ARP requests to be part of their logical network
# configured on the receiving interface. When we generate the
# request we will check all our subnets that include the
# target IP and will preserve the source address if it is from
# such subnet. If there is no such subnet we select source
# address according to the rules for level 2.
# 2 - Always use the best local address for this target.
# In this mode we ignore the source address in the IP packet
# and try to select local address that we prefer for talks with
# the target host. Such local address is selected by looking
# for primary IP addresses on all our subnets on the outgoing
# interface that include the target IP address. If no suitable
# local address is found we select the first local address
# we have on the outgoing interface or on all other interfaces,
# with the hope we will receive reply for our request and
# even sometimes no matter the source IP address we announce.
net.ipv4.conf.all.arp_announce = 2
 
# arp_ignore - INTEGER
# Define different modes for sending replies in response to
# received ARP requests that resolve local target IP addresses:
# 0 - (default): reply for any local target IP address, configured
# on any interface
# 1 - reply only if the target IP address is local address
# configured on the incoming interface
# 2 - reply only if the target IP address is local address
# configured on the incoming interface and both with the
# sender's IP address are part from same subnet on this interface
# 3 - do not reply for local addresses configured with scope host,
# only resolutions for global and link addresses are replied
# 4-7 - reserved
# 8 - do not reply for all local addresses
net.ipv4.conf.all.arp_ignore = 3
 
# Disable TCP timestamps, this saves us 12 bytes of overhead
net.ipv4.tcp_timestamps = 0
 
# Increases TCP max buffer size (default 87380*2 bytes)
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
 
# Increase Linux autotuning TCP buffer limits ( Default 4049, 87380, 419304)
net.ipv4.tcp_rmem = 4096 87360 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
 
# These values are used to turn off some of the caching metrics for each connection (Default 0)
net.ipv4.route.flush = 1
net.ipv4.tcp_no_metrics_save = 1

# Dont favor swapping 
vm.swappiness=0
